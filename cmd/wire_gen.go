// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/google/wire"
	"github.com/otaviotech/quode/internal/application/repository"
	"github.com/otaviotech/quode/internal/application/usecase"
	"github.com/otaviotech/quode/internal/infra/db/sql/repositories"
	"github.com/otaviotech/quode/internal/infra/web/webserver/handlers"
)

// Injectors from wire.go:

func NewCreateAuthorHandler(db *sql.DB) *handlers.CreateAuthorHandler {
	authorRepository := repositories.NewAuthorRepository(db)
	createAuthorUseCase := usecase.NewCreateAuthorUseCase(authorRepository)
	createAuthorHandler := handlers.NewCreateAuthorHandler(createAuthorUseCase)
	return createAuthorHandler
}

func NewCreateSubjectHandler(db *sql.DB) *handlers.CreateSubjectHandler {
	subjectRepository := repositories.NewSubjectRepository(db)
	createSubjectUseCase := usecase.NewCreateSubjectUseCase(subjectRepository)
	createSubjectHandler := handlers.NewCreateSubjectHandler(createSubjectUseCase)
	return createSubjectHandler
}

// wire.go:

var authorRepositorySet = wire.NewSet(repositories.NewAuthorRepository, wire.Bind(new(repository.AuthorRepositoryInterface), new(*repositories.AuthorRepository)))

var subjectRepositorySet = wire.NewSet(repositories.NewSubjectRepository, wire.Bind(new(repository.SubjectRepositoryInterface), new(*repositories.SubjectRepository)))
