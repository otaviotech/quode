// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: book.sql

package db_gen

import (
	"context"
	"time"
)

const connectBookAuthor = `-- name: ConnectBookAuthor :exec
INSERT INTO books_authors (book_id, author_id) VALUES ($1, $2)
`

type ConnectBookAuthorParams struct {
	BookID   string
	AuthorID string
}

func (q *Queries) ConnectBookAuthor(ctx context.Context, arg ConnectBookAuthorParams) error {
	_, err := q.db.ExecContext(ctx, connectBookAuthor, arg.BookID, arg.AuthorID)
	return err
}

const connectBookSubject = `-- name: ConnectBookSubject :exec
INSERT INTO books_subjects (book_id, subject_id) VALUES ($1, $2)
`

type ConnectBookSubjectParams struct {
	BookID    string
	SubjectID string
}

func (q *Queries) ConnectBookSubject(ctx context.Context, arg ConnectBookSubjectParams) error {
	_, err := q.db.ExecContext(ctx, connectBookSubject, arg.BookID, arg.SubjectID)
	return err
}

const createBook = `-- name: CreateBook :exec
INSERT INTO books (id, title, isbn, year, pages, created_at) VALUES ($1, $2, $3, $4, $5, $6)
`

type CreateBookParams struct {
	ID        string
	Title     string
	Isbn      string
	Year      int32
	Pages     int32
	CreatedAt time.Time
}

func (q *Queries) CreateBook(ctx context.Context, arg CreateBookParams) error {
	_, err := q.db.ExecContext(ctx, createBook,
		arg.ID,
		arg.Title,
		arg.Isbn,
		arg.Year,
		arg.Pages,
		arg.CreatedAt,
	)
	return err
}
